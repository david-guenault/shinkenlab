# This config file defines Shinken specific objects like
# satellites or Realms
#
# This file is for defining a pure high availability environnement
# That means that if a satellite die, it will be replaced
# There is only one Realm with every components into it
# All you need to to is to replace "node1" and "node2" by the DNS
# names of your Shinken servers.

# IMPORTANT NOTE : 
# This is an example configuration, without modules, to show
# how High-Availability can be configured for your daemons.


# The scheduler is a "Host manager". It gets the hosts and theirs
# services and it schedules the checks for the pollers.
define scheduler{
    scheduler_name  scheduler-master
    address         node1
    port            7768
    spare           0                   ; is not a spare
    realm           All
    weight          1                   ; optional: 1
    #modules        No modules this is an example
}


# The second scheduler, the slave one
define scheduler{
    scheduler_name  scheduler-slave
    address         node2
    por             7768
    spare           1                   ; is a spare
    realm           All
    weight          1                   ; optional: 1
    #modules        No modules this is an example
}


# Reactionner launches notifications
define reactionner{
    reactionner_name    reactionner-master
    address             node1
    port                7769
    spare               0
    realm               All
    manage_sub_realms   0               ; optional: 1
    min_workers         1               ; optional: 1
    max_workers         15              ; optional: 30
    polling_interval    1               ; optional: 1
    #modules        No modules this is an example
}


# Reactionner launches notifications
# The slave one
define reactionner{
    reactionner_name    reactionner-slave
    address             node2
    port                7769
    spare               1
    realm               All
    manage_sub_realms   0       ; optional: 1
    min_workers         1       ; optional: 1
    max_workers         15      ; optional: 30
    polling_interval    1       ; optional: 1
    #modules        No modules this is an example
}


# Pollers are here to launch checks
define poller{
    poller_name             poller-master
    address                 node1
    port                    7771
    realm                   All
    spare                   0
    manage_sub_realms       0       ; optional: 0
    min_workers             4       ; optional: 1
    max_workers             4       ; optional: 30
    processes_by_worker     256     ; optional: 256
    polling_interval        1       ; optional: 1
    #modules        No modules this is an example
}


# Pollers are here to launch checks
define poller{
    poller_name             poller-slave
    address                 node2
    port                    7771
    realm                   All
    spare                   1
    manage_sub_realms       0       ; optional: 0
    min_workers             4       ; optional: 1
    max_workers             4       ; optional: 30
    processes_by_worker     256     ; optional: 256
    polling_interval        1       ; optional: 1
    #modules        No modules this is an example
}


# The arbiter definition IS important: without 2 defined arbiter,
# there is no high availability
define arbiter{
    arbiter_name    Arbiter-master
    host_name       node1       ; result of the get_hostname.py command (or hostname under Unix)
    address         node1
    port            7770
    spare           0
    #modules        No modules this is an example
}

# the slave, waiting patiently for its master to die
define arbiter{
    arbiter_name    Arbiter-slave
    host_name       node2       ; result of the get_hostname.py command (or hostname under Unix)
    address         node2
    port            7770
    spare           1
    #modules        No modules this is an example      
}



define broker{
    broker_name         broker-master
    address             node1
    port                7772
    spare               0
    realm               All
    manage_sub_realms   1
    manage_arbiters     1
    #modules        No modules this is an example        
}

define broker{
    broker_name         broker-slave
    address             node2
    port                7772
    spare               1
    realm               All
    manage_sub_realms   1
    manage_arbiters     1
    #modules        No modules this is an example        
}


# A global Realm
define realm{
    realm_name  All
    default     1
}
